{
  "title": "Math Game",
  "description": "",
  "tags": [],
  "activeEditor": "script",
  "markup": {
    "language": "html",
    "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Math Game</title>\r\n  </head>\r\n  <body>\r\n    <div class=\"first\">\r\n      <h1>Math game</h1>\r\n      <p class='cursor' id=\"plus\">Addition</p>\r\n      <p class='cursor' id=\"minus\">Subtraction</p>\r\n      <p class='cursor' id=\"by\">Multiplication</p>\r\n      <p id='k'>Created by Karim</p>\r\n    </div>\r\n\r\n    <div class=\"game\">\r\n      <h1></h1>\r\n      <input type='number'><br><p id='streak'>Streak: 0</p>\r\n      <p id='state'>bruh</p>\r\n      <form action=\"\">\r\n      <button id=\"addB\" class='buttons'>Submit</button>\r\n      <button id=\"subB\" class='buttons'>Submit</button>\r\n      <button id=\"mulB\" class='buttons'>Submit</button>\r\n      <br><button id=\"aB\" class='buttons'>Exit</button>\r\n      <button id=\"sB\" class='buttons'>Exit</button>\r\n      <button id=\"mB\" class='buttons'>Exit</button>\r\n    </div>\r\n\r\n  </body>\r\n</html>\r\n"
  },
  "style": {
    "language": "css",
    "content": "html,\r\nbody {\r\n  background-color: #555;\r\n  color: white;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n}\r\ninput {\r\n  border-radius: 5px;\r\n  background-color: #888;\r\n  margin-bottom: 1rem;\r\n  width: 90%;\r\n  padding: 3px;\r\n  color: white;\r\n}\r\nh1 {\r\n  text-align: center;\r\n}\r\n.game{\r\n  display: none;\r\n}\r\n.buttons {\r\n  display: none;\r\n  margin: auto;\r\n}\r\np.cursor{ \r\n  cursor: pointer;\r\n}\r\np {\r\n  font-weight: bold;\r\n  font-size: larger;\r\n  margin-top: 60px;\r\n  cursor: default;\r\n}\r\n#k {\r\n  text-align: center;\r\n  margin-top: 150px;\r\n}\r\n#state{\r\n  opacity: 0;\r\n  margin: 0;\r\n  padding: 0;\r\n  font-size: x-large;\r\n  text-transform: capitalize;\r\n}"
  },
  "script": {
    "language": "javascript",
    "content": "let input = document.querySelector('input');\r\nlet add = document.querySelector('#plus');\r\nlet min = document.querySelector('#minus');\r\nlet by = document.querySelector('#by');\r\nlet game = document.querySelector('.game');\r\nlet fst = document.querySelector('.first');\r\nlet h1 = document.querySelector('.game h1');\r\nlet addB = document.querySelector('#addB');\r\nlet subB = document.querySelector('#subB');\r\nlet mulB = document.querySelector('#mulB');\r\nlet aB = document.querySelector('#aB');\r\nlet sB = document.querySelector('#sB');\r\nlet mB = document.querySelector('#mB');\r\nlet state = document.querySelector('#state');\r\n\r\nlet streakTxt = document.querySelector('#streak');\r\nlet streakArr = [];\r\nlet streak = streakArr.length;\r\nlet ran1 = Math.floor(Math.random() * 10);\r\nlet ran2 = Math.floor(Math.random() * 10);\r\nlet ans = 0;\r\n\r\nadd.onclick = function () {\r\n  game.style.display = 'block';\r\n  fst.style.display = 'none';\r\n  addf();\r\n};\r\nmin.onclick = function () {\r\n  game.style.display = 'block';\r\n  fst.style.display = 'none';\r\n  subf();\r\n};\r\nby.onclick = function () {\r\n  game.style.display = 'block';\r\n  fst.style.display = 'none';\r\n  mulf();\r\n};\r\nfunction addf() {\r\n  addB.style.display = 'block';\r\n  aB.style.display = 'block';\r\n  let str = String(ran1);\r\n  let str2 = String(ran2);\r\n  let ansStr = str + ' + ' + str2;\r\n  h1.innerText = ansStr;\r\n  ans = ran1 + ran2;\r\n  ran1 = Math.floor(Math.random() * 20);\r\n  ran2 = Math.floor(Math.random() * 20);\r\n}\r\naB.onclick = () => {\r\n  addB.style.display = 'none';\r\n  aB.style.display = 'none';\r\n  game.style.display = 'none';\r\n  fst.style.display = 'block';\r\n};\r\naddB.onclick = (event) => {\r\n  event.preventDefault()\r\n  if (Number(input.value) === ans) {\r\n    streakArr.push(true);\r\n    streak = streakArr.length;\r\n    streakTxt.innerText = 'Streak: ' + streak;\r\n    input.value = '';\r\n    state.innerText = 'correct'\r\n    state.style.color = 'lime';\r\n    state.style.opacity = '1';\r\n    setTimeout(() => {\r\n      state.style.opacity = '0';\r\n    }, 2000);\r\n    addf();\r\n  } else {\r\n    streakArr.length = 0;\r\n    streak = streakArr.length;\r\n    streakTxt.innerText = 'Streak: ' + streak;\r\n    state.innerText = 'incorrect'\r\n    state.style.color = 'red';\r\n    state.style.opacity = '1';\r\n    setTimeout(() => {\r\n      state.style.opacity = '0';\r\n      \r\n    }, 2000);\r\n    input.value = '';\r\n    addf();\r\n  }\r\n};\r\n\r\nfunction subf() {\r\n  subB.style.display = 'block';\r\n  sB.style.display = 'block';\r\n  let str = String(ran1);\r\n  let str2 = String(ran2);\r\n  let ansStr = str + ' - ' + str2;\r\n  h1.innerText = ansStr;\r\n  ans = ran1 - ran2;\r\n  ran1 = Math.floor(Math.random() * 20);\r\n  ran2 = Math.floor(Math.random() * 15);\r\n}\r\n\r\nsB.onclick = () => {\r\n  subB.style.display = 'none';\r\n  sB.style.display = 'none';\r\n  game.style.display = 'none';\r\n  fst.style.display = 'block';\r\n};\r\n\r\nsubB.onclick = (event) => {\r\n  event.preventDefault()\r\n  if (Number(input.value) === ans) {\r\n    streakArr.push(true);\r\n    streak = streakArr.length;\r\n    streakTxt.innerText = 'Streak: ' + streak;\r\n    input.value = '';\r\n    state.innerText = 'correct'\r\n    state.style.color = 'lime';\r\n    state.style.opacity = '1';\r\n    setTimeout(() => {\r\n      state.style.opacity = '0';\r\n    }, 2000);\r\n    subf();\r\n  } else {\r\n    streakArr.length = 0;\r\n    streak = streakArr.length;\r\n    streakTxt.innerText = 'Streak: ' + streak;\r\n    state.innerText = 'incorrect'\r\n    state.style.color = 'red';\r\n    state.style.opacity = '1';\r\n    setTimeout(() => {\r\n      state.style.opacity = '0';\r\n    }, 2000);\r\n    input.value = '';\r\n    subf();\r\n  }\r\n};\r\n\r\nfunction mulf() {\r\n  mulB.style.display = 'block';\r\n  mB.style.display = 'block';\r\n  let str = String(ran1);\r\n  let str2 = String(ran2);\r\n  let ansStr = str + ' x ' + str2;\r\n  h1.innerText = ansStr;\r\n  ans = ran1 * ran2;\r\n  ran1 = Math.floor(Math.random() * 10);\r\n  ran2 = Math.floor(Math.random() * 10);\r\n}\r\n\r\nmB.onclick = () => {\r\n  mulB.style.display = 'none';\r\n  mB.style.display = 'none';\r\n  game.style.display = 'none';\r\n  fst.style.display = 'block';\r\n};\r\n\r\nmulB.onclick = (event) => {\r\n  event.preventDefault()\r\n  if (Number(input.value) === ans) {\r\n    streakArr.push(true);\r\n    streak = streakArr.length;\r\n    streakTxt.innerText = 'Streak: ' + streak;\r\n    input.value = '';\r\n    state.innerText = 'correct'\r\n    state.style.color = 'lime';\r\n    state.style.opacity = '1';\r\n    setTimeout(() => {\r\n      state.style.opacity = '0';\r\n    }, 2000);\r\n    mulf();\r\n  } else {\r\n    streakArr.length = 0;\r\n    streak = streakArr.length;\r\n    streakTxt.innerText = 'Streak: ' + streak;\r\n    state.innerText = 'incorrect'\r\n    state.style.color = 'red';\r\n    state.style.opacity = '1';\r\n    setTimeout(() => {\r\n      state.style.opacity = '0';\r\n    }, 2000);\r\n    input.value = '';\r\n    mulf();\r\n  }\r\n};\r\n"
  },
  "stylesheets": [],
  "scripts": [],
  "cssPreset": "",
  "processors": [],
  "customSettings": {},
  "imports": {},
  "types": {},
  "tests": {
    "language": "typescript",
    "content": ""
  },
  "version": "10"
}